(function festStdModule() {
	'use strict';

	//
	// WARNING: ONLY ES3
	//

	var __fest_short_tags = {
		area: true, base: true, br: true, col: true, command: true,
		embed: true, hr: true, img: true, input: true, keygen: true,
		link: true, meta: true, param: true, source: true, wbr: true
	};
	var __fest_jschars = /[\\'"\/\n\r\t\b\f<>]/g;
	var __fest_jschars_test = /[\\'"\/\n\r\t\b\f<>]/;
	var __fest_htmlchars = /[&<>"]/g;
	var __fest_htmlchars_test = /[&<>"]/;
	var __fest_jshash = {
		"\"": "\\\"",
		"\\": "\\\\",
		"/": "\\/",
		"\n": "\\n",
		"\r": "\\r",
		"\t": "\\t",
		"\b": "\\b",
		"\f": "\\f",
		"'": "\\'",
		"<": "\\u003C",
		">": "\\u003E"
	};
	var __fest_htmlhash = {
		"&": "&amp;",
		"<": "&lt;",
		">": "&gt;",
		'"': "&quot;"
	};

	var __fest_jsonchars = /[<>]/g;
	var __fest_jsonchars_test = /[<>]/;
	var __fest_jsonhash = {'<': '\\u003C', '>': '\\u003E'};

	function __fest_extend(dest, src) {
		for (var key in src) {
			if (src.hasOwnProperty(key)) {
				dest[key] = src[key];
			}
		}
	}

	function __fest_param(fn) {
		fn.param = true;
		return fn;
	}

	function __fest_replaceHTML(chr) {
		return __fest_htmlhash[chr];
	}

	function __fest_replaceJS(chr) {
		return __fest_jshash[chr];
	}

	function __fest_escapeJS(value) {
		if (typeof value === 'string') {
			if (__fest_jschars_test.test(value)) {
				return value.replace(__fest_jschars, __fest_replaceJS);
			}
		}

		return value == null ? '' : value;
	}

	function __fest_escapeHTML(value) {
		if (typeof value === 'string') {
			if (__fest_htmlchars_test.test(value)) {
				return value.replace(__fest_htmlchars, __fest_replaceHTML);
			}
		}

		return value == null ? '' : value;
	}

	function __fest_replaceJSON(chr) {
		return __fest_jsonhash[chr];
	}

	function __fest_escapeJSON(value) {
		value = JSON.stringify(value);

		if (__fest_jsonchars_test.test(value)) {
			return value.replace(__fest_jsonchars, __fest_replaceJSON);
		}

		return value;
	}

	function __fest_format(input, val) {
		return input.replace(/%./g, function (chr) {
			return ('%s' === chr) ? val : '%';
		});
	}

	//
	// Standard library
	//
	var namespace = 'fest_stdlib';
	var stdlib = {
		namespace: namespace,

		core: {
			short_tags: __fest_short_tags,
			jschars: __fest_jschars,
			jschars_test: __fest_jschars_test,
			htmlchars: __fest_htmlchars,
			htmlchars_test: __fest_htmlchars_test,
			jshash: __fest_jshash,
			htmlhash: __fest_htmlhash,

			escapeJS: __fest_escapeJS,
			replaceJS: __fest_replaceJS,

			escapeHTML: __fest_escapeHTML,
			replaceHTML: __fest_replaceHTML,

			extend: __fest_extend,
			param: __fest_param,
		},

		json: {
			jsonchars: __fest_jsonchars,
			jsonchars_test: __fest_jsonchars_test,
			jsonhash: __fest_jsonhash,

			replaceJSON: __fest_replaceJSON,
			escapeJSON: __fest_escapeJSON,
		},

		plural: {
			format: __fest_format,
		}
	};


	// Export
	new Function('stdlib', 'this.' + namespace + ' = stdlib')(stdlib);

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = stdlib;
	}

	return stdlib;
})();
